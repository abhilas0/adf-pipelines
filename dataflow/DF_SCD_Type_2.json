{
	"name": "DF_SCD_Type_2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Employee_scd",
						"type": "DatasetReference"
					},
					"name": "DsScdFile"
				},
				{
					"dataset": {
						"referenceName": "DS_SCD_Type_2",
						"type": "DatasetReference"
					},
					"name": "DBTable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_SCD_Type_2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "LeftJoin"
				},
				{
					"name": "filterNull"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as short,",
				"          name as string,",
				"          city as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DsScdFile",
				"source(output(",
				"          id as integer,",
				"          name as string,",
				"          city as string,",
				"          active_flag as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DBTable",
				"DBTable select(mapColumn(",
				"          db_id = id,",
				"          db_name = name,",
				"          db_city = city,",
				"          db_active_flag = active_flag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"DsScdFile, select1 join(id == db_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoin",
				"LeftJoin filter(!isNull(db_id)) ~> filterNull",
				"filterNull select(mapColumn(",
				"          id = db_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive(active_flag = 0) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as integer,",
				"          name as string,",
				"          city as string,",
				"          active_flag as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}